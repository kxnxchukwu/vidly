{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Kenechukwu\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kenechukwu\\\\vidly\\\\src\\\\components\\\\Movies.jsx\";\nimport React, { Component } from \"react\";\nimport MoviesTable from \"./MoviesTable\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport Sidebar from \"./common/sidebar\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport _ from \"lodash\";\nimport Link from \"react-router-dom/Link\";\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = _objectSpread({}, movies[index]);\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPageData = () => {\n      const _this$state = this.state,\n            currentPage = _this$state.currentPage,\n            pageSize = _this$state.pageSize,\n            selectedGenre = _this$state.selectedGenre,\n            sortColumn = _this$state.sortColumn,\n            allMovies = _this$state.movies;\n      const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: \"All Movies\",\n      _id: \"\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const count = this.state.movies.length;\n    const _this$state2 = this.state,\n          currentPage = _this$state2.currentPage,\n          pageSize = _this$state2.pageSize,\n          sortColumn = _this$state2.sortColumn;\n\n    if (count === 0) {\n      return React.createElement(\"p\", {\n        className: \"text-danger lead mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"There are no Movies in the database\");\n    }\n\n    const _this$getPageData = this.getPageData(),\n          totalCount = _this$getPageData.totalCount,\n          movies = _this$getPageData.data;\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2 pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      items: this.state.genres,\n      selectedItem: this.state.selectedGenre,\n      onItemSelect: this.handleGenreSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/movies/new\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"New Movie\"), React.createElement(\"p\", {\n      className: \"text-success lead mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Now Showing \", totalCount, \" Movies in the database\"), React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:\\Users\\Kenechukwu\\vidly\\src\\components\\Movies.jsx"],"names":["React","Component","MoviesTable","getMovies","Pagination","paginate","Sidebar","getGenres","_","Link","Movie","state","movies","genres","currentPage","pageSize","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","getPageData","allMovies","filtered","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Sidebar from \"./common/sidebar\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport _ from \"lodash\";\r\nimport Link from \"react-router-dom/Link\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ name: \"All Movies\", _id: \"\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n\r\n  handleDelete = movie => {\r\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      selectedGenre,\r\n      sortColumn,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    const filtered =\r\n      selectedGenre && selectedGenre._id\r\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n        : allMovies;\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { currentPage, pageSize, sortColumn } = this.state;\r\n\r\n    if (count === 0) {\r\n      return (\r\n        <p className=\"text-danger lead mt-3\">\r\n          There are no Movies in the database\r\n        </p>\r\n      );\r\n    }\r\n\r\n    const { totalCount, data: movies } = this.getPageData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container row\">\r\n          <div className=\"col-2 pt-4\">\r\n            <Sidebar\r\n              items={this.state.genres}\r\n              selectedItem={this.state.selectedGenre}\r\n              onItemSelect={this.handleGenreSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <Link to=\"/movies/new\" className=\"btn btn-primary\">New Movie</Link>\r\n            <p className=\"text-success lead mt-3\">\r\n              Now Showing {totalCount} Movies in the database\r\n            </p>\r\n            <MoviesTable\r\n              movies={movies}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}